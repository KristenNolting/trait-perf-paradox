family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSC_mod_no_REs")
sink(file = "Output/Model_Fits/LSC_mod_no_REs.txt")
summary(LSC_mod_2)
sink()
# 3. Photo
Photo_mod_2 <- brm(Photo_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled,
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Photo_mod_no_REs")
sink(file = "Output/Model_Fits/Photo_mod_no_REs.txt")
summary(Photo_mod_2)
sink()
# 4. LSP
LSP_mod_2 <- brm(Total_Assim_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled,
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSP_mod_no_REs")
sink(file = "Output/Model_Fits/LSP_mod_no_REs.txt")
summary(LSP_mod_2)
sink()
# 5. Conductance
Cond_mod_2 <- brm(Cond_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled,
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Cond_mod_no_REs")
sink(file = "Output/Model_Fits/Cond_mod_no_REs.txt")
summary(Cond_mod_2)
sink()
# 6. Instantaneous WUE
WUE_Instan_mod_2 <- brm(WUE_Instan_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled,
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/WUE_mod_no_REs")
sink(file = "Output/Model_Fits/WUE_mod_no_REs.txt")
summary(WUE_Instan_mod_2)
sink()
Structural_Traits <- c("BW_scaled", "WD_scaled", "Leaf_Area_scaled", "LMA_scaled",
"LD_scaled", "LWR_scaled", "Stom_L_scaled", "Stom_D_scaled")
# Pull regression vector
ks2_coefs <- as.data.frame(fixef(ks_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"Ks_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(ks2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(ks2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
Ks2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Sapwood-Specific Hydraulic Conductivity") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
Ks2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
# Pull regression vector
LSC2_coefs <- as.data.frame(fixef(LSC_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"LSC_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(LSC2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(LSC2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
LSC2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Leaf-Specific Conductivity") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
LSC2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
# Pull regression vector
Photo2_coefs <- as.data.frame(fixef(Photo_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"Photo_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(Photo2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(Photo2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
Photo2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Photosynthetic Rate") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
Photo2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
# Pull regression vector
Total_Assim2_coefs <- as.data.frame(fixef(LSP_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"Total_Assim_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(Total_Assim2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(Total_Assim2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
Total_Assim2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Leaf-Specific Photosynthetic Rate") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
Total_Assim2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
# Pull regression vector
Cond2_coefs <- as.data.frame(fixef(Cond_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"Cond_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(Cond2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(Cond2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
Cond2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Stomatal Conductance") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
Cond2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
# Pull regression vector
WUE_Instan2_coefs <- as.data.frame(fixef(WUE_Instan_mod_2, summary = FALSE))
# Get PCs
dat_for_pca <- Protea_data %>%
select("Species", all_of(Structural_Traits),
"WUE_Instan_scaled") %>%
droplevels()
dat_for_pca <- na.omit(dat_for_pca)
pca_results <- princomp(dat_for_pca[, Structural_Traits], cor = TRUE)
# Distribution of cosines
n_iter <- nrow(WUE_Instan2_coefs)
cosine_dist <- data.frame(PC1 = numeric(),
PC2 = numeric(),
PC3 = numeric(),
PC4 = numeric(),
PC5 = numeric(),
PC6 = numeric(),
PC7 = numeric(),
PC8 = numeric())
cosines <- numeric(ncol(pca_results$loadings))
for(j in 1:n_iter){
mod_coefs <- as.numeric(WUE_Instan2_coefs[j,])
for (i in 1:ncol(pca_results$loadings)) {
cosines[i] <- cosine(pca_results$loadings[, i], mod_coefs[-1])
}
cosines_df <- as.data.frame(cosines)
cosines_df <- t(cosines_df)
colnames(cosines_df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")
cosine_dist <- rbind(cosine_dist, cosines_df)
}
# Convert to radians using arc cosine
CosDegrees_dist <- (acos(cosine_dist))*(180/pi)
# Convert Degrees to a scale between 0-90 degrees
CosDegrees_Abs_dist <- (acos(abs(cosine_dist)))*(180/pi)
# Plot
WUE_Instan2_hist <-
CosDegrees_Abs_dist %>%
pivot_longer(cols = everything(), names_to = "PC_Axis", values_to = "Cosine_Value") %>%
ggplot(aes(x = Cosine_Value, y = reorder(PC_Axis, desc(PC_Axis)))) +
xlim(0, 90) +
stat_histinterval(.width = c(.95, .5)) +
ggtitle("Instantaneous Water-Use Efficiency") +
xlab("Angle Between Trait PC \n & Functional Axis") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank())
WUE_Instan2_hist
# Pull out summary
summary(CosDegrees_Abs_dist)
names(Protea_data)
pca_results
summary(pca_results)
# 2. LSC: PC2 and PC8 are most aligned
color <- cut(Protea_data$LSC_scaled, breaks=quantile(Protea_data$LSC_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC2=pca_results$scores[, 2],
PC8=pca_results$scores[, 8],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_LSC2 <- ggplot(tr_pca_df, aes(x = PC2, y = PC8, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC2, y=PC8, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Leaf-Specific \n Conductivity") + xlab("PC 2 (20.7%)") + ylab("PC 8 (0.01%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_LSC2
# 2. LSC: PC2 and PC8 are most aligned
color <- cut(Protea_data$LSC_scaled, breaks=quantile(Protea_data$LSC_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC2=pca_results$scores[, 2],
PC8=pca_results$scores[, 8],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_LSC2 <- ggplot(tr_pca_df, aes(x = PC2, y = PC8, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC2, y=PC8, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Leaf-Specific Conductivity") + xlab("PC 2 (20.7%)") + ylab("PC 8 (0.01%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_LSC2
summary(pca_results)
# 4. Total Assimilation: PC2 and PC7 are most aligned
color <- cut(Protea_data$Total_Assim_scaled, breaks=quantile(Protea_data$Total_Assim_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC2=pca_results$scores[, 2],
PC7=pca_results$scores[, 7],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_Total_Assim2 <- ggplot(tr_pca_df, aes(x = PC2, y = PC7, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC2, y=PC7, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Leaf-Specific /n Photosynthetic Rate") + xlab("PC 2 (20.7%)") + ylab("PC 7 (0.01%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_Total_Assim2
names(Protea_data)
summary(pca_results)
# 6. Instantaneous WUE: PC6 and PC8 are most aligned
color <- cut(Protea_data$WUE_Instan_scaled, breaks=quantile(Protea_data$WUE_Instan_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC6=pca_results$scores[, 6],
PC8=pca_results$scores[, 8],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_WUE2 <- ggplot(tr_pca_df, aes(x = PC6, y = PC8, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC6, y=PC8, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Instantaneous \n Water-Use Efficiency") + xlab("PC 6 (2.3%)") + ylab("PC 8 (1.0%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_WUE2
# 4. Total Assimilation: PC2 and PC7 are most aligned
color <- cut(Protea_data$Total_Assim_scaled, breaks=quantile(Protea_data$Total_Assim_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC2=pca_results$scores[, 2],
PC7=pca_results$scores[, 7],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_Total_Assim2 <- ggplot(tr_pca_df, aes(x = PC2, y = PC7, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC2, y=PC7, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Leaf-Specific \n Photosynthetic Rate") + xlab("PC 2 (20.7%)") + ylab("PC 7 (1.5%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_Total_Assim2
# 2. LSC: PC2 and PC8 are most aligned
color <- cut(Protea_data$LSC_scaled, breaks=quantile(Protea_data$LSC_scaled, c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)),
c("Low",
"Medium low",
"Medium",
"Medium high",
"High"),
include.lowest=TRUE)
tr_pca_df <- tibble(PC2=pca_results$scores[, 2],
PC8=pca_results$scores[, 8],
Species=Protea_data$Species,
Phys_level = factor(color, ordered = TRUE))
pc_LSC2 <- ggplot(tr_pca_df, aes(x = PC2, y = PC8, color = Phys_level)) +
geom_point() + stat_ellipse(aes(x=PC2, y=PC8, group=Species), colour = "black") +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
ggtitle("Leaf-Specific Conductivity") + xlab("PC 2 (20.7%)") + ylab("PC 8 (1.0%)") +
theme_classic() +
guides(color = "none") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
pc_LSC2
# Multi-panel plot for the other three physiological performance PCs (top is PC1 and PC2, bottom is PC axes aligned w/ function)
plot_grid(pc_LSC, pc_Total_Assim, pc_WUE, pc_LSC2, pc_Total_Assim2, pc_WUE2,
labels = c("A", "B", "C", "D", "E", "F"), ncol = 3, nrow = 2)
ggsave(filename = "PCA_Performance_panel_supplement.pdf",
path = "Output/Figures",
height = 8, width = 12)
