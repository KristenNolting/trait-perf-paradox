geom_segment(x = 0.3, y = 0, xend = eigen$values[2] + 0.3, yend = eigen$slopes[2] * eigen$values[2],
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p1_pos
getwd()
eigen$values[1]
eigen
# Plot for Scenario 1
p1_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p1_pos <- p1_pos + geom_point(aes(colour = Performance_1)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 1") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) +
geom_smooth(color = 'magenta4', data = predicted_1, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[1] + 0.3, yend = eigen$slopes[1] * eigen$values[1],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[2] + 0.3, yend = eigen$slopes[2] * eigen$values[2],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 1.8 + 0.3, yend = 1.8,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 0.2 + 0.3, yend = -0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p1_pos
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1)
p2_pos
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14)
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 6)
getwd()
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "/Users/knolting/Documents/GitHub/trait-perf-paradox/CodeOutput/Figures",
height = 5, width = 6)
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "/Users/knolting/Documents/GitHub/trait-perf-paradox/Code/Output/Figures",
height = 5, width = 6)
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Users/knolting/Documents/GitHub/trait-perf-paradox/Code/Output/Figures",
height = 5, width = 6)
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Users/knolting/Documents/GitHub/trait-perf-paradox/Output/Figures",
height = 5, width = 6)
setwd("~/Documents/GitHub/trait-perf-paradox")
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 6)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 22),
axis.title.y = element_text(size = 22),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16)
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 6)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 22),
axis.title.y = element_text(size = 22),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
legend.title = element_text(size = 22),
legend.text = element_text(size = 16)
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 6)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 22),
axis.title.y = element_text(size = 22),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
legend.title = element_blank(),
legend.text = element_text(size = 16)
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 22),
axis.title.y = element_text(size = 22),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 6)
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 4)
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 5, width = 5)
# Plot for Scenario 1
p1_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p1_pos <- p1_pos + geom_point(aes(colour = Performance_1)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 1") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_1, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[1] + 0.3, yend = eigen$slopes[1] * eigen$values[1],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[2] + 0.3, yend = eigen$slopes[2] * eigen$values[2],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 1.8 + 0.3, yend = 1.8,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 0.2 + 0.3, yend = -0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p1_pos
# And Saving
ggsave(filename = "p1_pos2.pdf",
path = "Output/Figures",
height = 5, width = 5)
lm_1
summary(lm_1)
summary(lm_2)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 4)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
#legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 5)
# Plot for Scenario 1
p1_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p1_pos <- p1_pos + geom_point(aes(colour = Performance_1)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 1") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
#legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_1, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[1] + 0.3, yend = eigen$slopes[1] * eigen$values[1],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[2] + 0.3, yend = eigen$slopes[2] * eigen$values[2],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 1.8 + 0.3, yend = 1.8,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 0.2 + 0.3, yend = -0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p1_pos
# And Saving
ggsave(filename = "p1_pos2.pdf",
path = "Output/Figures",
height = 5, width = 5)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
#legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 5)
p1_pos
# And Saving
ggsave(filename = "p1_pos2.pdf",
path = "Output/Figures",
height = 4, width = 5)
# Plot for Scenario 1
p1_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p1_pos <- p1_pos + geom_point(aes(colour = Performance_1)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 1") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_1, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[1] + 0.3, yend = eigen$slopes[1] * eigen$values[1],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
# geom_segment(x = 0.3, y = 0, xend = eigen$values[2] + 0.3, yend = eigen$slopes[2] * eigen$values[2],
#              colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 1.8 + 0.3, yend = 1.8,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = 0.3, y = 0, xend = 0.2 + 0.3, yend = -0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p1_pos
# And Saving
ggsave(filename = "p1_pos2.pdf",
path = "Output/Figures",
height = 4, width = 4)
# Plot for Scenario 2
p2_pos <- ggplot(data = dat, aes(x = Trait_1, y = Trait_2)) +
stat_ellipse(type = "norm", size = 1.5, linetype = "dashed", colour = "grey24")
p2_pos <- p2_pos + geom_point(aes(colour = Performance_2)) +
scale_colour_distiller(type = "seq", palette = "Spectral", limits = c(-3.1,2.95), direction = 1) +
#ggtitle("Simulation: Scenario 2") +
xlab("Trait 1") + ylab("Trait 2") +
theme_classic() + labs(colour = "Performance") +
theme(
axis.title.x = element_text(size = 26),
axis.title.y = element_text(size = 26),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = "none"
) +
geom_smooth(color = 'magenta4', data = predicted_2, aes(x = Perf_pred, y = Trait_2),
se = FALSE, linetype = "dotdash", size = 1.5) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[1] - 0.2, yend = (eigen$slopes[1] * eigen$values[1]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
# geom_segment(x = -0.2, y = -0.2, xend = eigen$values[2] - 0.2, yend = (eigen$slopes[2] * eigen$values[2]) - 0.2,
#              colour = "grey54", arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 1.8 - 0.2, yend = 1.8 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1) +
geom_segment(x = -0.2, y = -0.2, xend = 0.2 - 0.2, yend = -0.2 - 0.2,
colour = "grey54", arrow = arrow(length = unit(0.4, "cm")), size = 1)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 4)
p1_pos
# And Saving
ggsave(filename = "p1_pos2.pdf",
path = "Output/Figures",
height = 4, width = 5)
p2_pos
# And Saving
ggsave(filename = "p2_pos2.pdf",
path = "Output/Figures",
height = 4, width = 5)
40*8
40*12
40*6
40*8
1700+1100
156+340+1200
76+82
4*6*2
48*3
2950-678
2272-1184
2361-1184
3106-156.32
3106-156.32-58873
3106-156-589
2361-678
1683-1184
450-1147
678/2
