#check
dim(Protea_data)
# save as R object to load in associated analysis files
save(Protea_data, file = "Data/Protea_data.RData")
# clean up, as we'll work with Protea_data
rm(full_data)
rm(subset_data)
library(brms)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(tidybayes)
# optimize computing
options(mc.cores = parallel::detectCores())
ks_mod <- brm(Ks_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/ks_mod")
bayes_R2(ks_mod)
bayes_R2(ks_mod, re_formula = NA)
print(summary(ks_mod))
write.csv(summary(ks_mod), file = "Output/Model_Fits/ks_mod.txt")
write.csv(print(summary(ks_mod), file = "Output/Model_Fits/ks_mod.txt"))
as.data.frame(summary(ks_mod))
brms_SummaryTable(ks_mod)
class(ks_mod)
class(summary(ks_mod))
# load libraries
library(brms)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(tidybayes)
# optimize computing
options(mc.cores = parallel::detectCores())
ks_mod <- brm(Ks_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/ks_mod")
bayes_R2(ks_mod)
bayes_R2(ks_mod, re_formula = NA)
# 2. Leaf-Specific Conductivity (LSC)
LSC_mod <- brm(LSC_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSC_mod")
# 3. Area-based photosynthetic rate
Photo_mod <- brm(Photo_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Photo_mod")
# 4. Total Assimilation (LSP)
Total_Assim_mod <- brm(Total_Assim_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSP_mod")
# 5. Stomatal Conductance
Cond_mod <- brm(Cond_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Cond_mod")
# 6. Instantaneous WUE
WUE_Instan_mod <- brm(WUE_Instan_scaled ~ BW_scaled + WD_scaled + Leaf_Area_scaled +
LMA_scaled + LD_scaled + LWR_scaled + Stom_L_scaled + Stom_D_scaled +
(1|Site) + (1|Species) + (1|Site:Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = b),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.999, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/WUE_mod")
# 1. Ks
p_post <- predict(ks_mod) # get predicted Ks values from original data and fitted model
p_post_Ks <- as.data.frame(p_post)
p_post_Ks$Obs <- Protea_data$Ks_scaled
p_post_Ks$Species <- Protea_data$Species
p_post_Ks$Site <- Protea_data$Site
Ks_pp <- ggplot(data = p_post_Ks, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Sapwood-specific \n Hydraulic Conductivity") + xlab("Predicted Ks (scaled)") + ylab("Observed Ks (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
Ks_pp
# 2. LSC
p_post <- predict(LSC_mod) # get predicted ks values from original data and fitted model
p_post_LSC <- as.data.frame(p_post)
p_post_LSC$Obs <- Protea_data$LSC_scaled
p_post_LSC$Species <- Protea_data$Species
p_post_LSC$Site <- Protea_data$Site
LSC_pp <- ggplot(data = p_post_LSC, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Leaf-specific \n Conductivity") + xlab("Predicted LSC (scaled)") + ylab("Observed LSC (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
LSC_pp
# 3. Photo
p_post <- predict(Photo_mod) # get predicted ks values from original data and fitted model
p_post_Photo <- as.data.frame(p_post)
p_post_Photo$Obs <- Protea_data$Photo_scaled
p_post_Photo$Species <- Protea_data$Species
p_post_Photo$Site <- Protea_data$Site
Photo_pp <- ggplot(data = p_post_Photo, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
#scale_color_viridis(discrete = TRUE) +
xlim(-2, 2) + ylim(-2.8, 2.8) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Photosynthetic \n Rate") + xlab("Predicted Aarea (scaled)") + ylab("Observed Aarea (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
Photo_pp
# 4. Total_Assim (LSP)
p_post <- predict(Total_Assim_mod) # get predicted ks values from original data and fitted model
p_post_Total_Assim <- as.data.frame(p_post)
p_post_Total_Assim$Obs <- Protea_data$Total_Assim_scaled
p_post_Total_Assim$Species <- Protea_data$Species
p_post_Total_Assim$Site <- Protea_data$Site
Total_Assim_pp <- ggplot(data = p_post_Total_Assim, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
#scale_color_viridis(discrete = TRUE) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Leaf-specific \n Photosynthetic Rate") + xlab("Predicted LSP (scaled)") + ylab("Observed LSP (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
Total_Assim_pp
# 5. Stomtal Conductance
p_post <- predict(Cond_mod) # get predicted ks values from original data and fitted model
p_post_Cond <- as.data.frame(p_post)
p_post_Cond$Obs <- Protea_data$Cond_scaled
p_post_Cond$Species <- Protea_data$Species
p_post_Cond$Site <- Protea_data$Site
Cond_pp <- ggplot(data = p_post_Cond, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Stomatal \n Conductance") + xlab("Predicted gs (scaled)") + ylab("Observed gs (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
Cond_pp
# 6. WUE_Instan
p_post <- predict(WUE_Instan_mod) # get predicted ks values from original data and fitted model
p_post_WUE_Instan <- as.data.frame(p_post)
p_post_WUE_Instan$Obs <- Protea_data$WUE_Instan_scaled
p_post_WUE_Instan$Species <- Protea_data$Species
p_post_WUE_Instan$Site <- Protea_data$Site
WUE_Instan_pp <- ggplot(data = p_post_WUE_Instan, aes(x = Estimate, y = Obs)) +
geom_point(size = 2, aes(shape = Site, colour = as.factor(Species))) +
scale_fill_distiller(type = "seq", palette = "Spectral", direction = 1) +
geom_abline(slope = 1, colour = "grey44", linetype = "dashed") +
ggtitle("Instantaneous \n Water-use Efficiency") + xlab("Predicted WUE_Instan (scaled)") + ylab("Observed WUE_Instan (scaled)") +
theme_classic() + labs(colour = "Species") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none")
WUE_Instan_pp
# Panel Plot
plot_grid(Ks_pp, LSC_pp, Photo_pp, Total_Assim_pp, Cond_pp, WUE_Instan_pp,
labels = c("A", "B", "C", "D", "E", "F"), ncol = 3, nrow = 2)
# save
ggsave(filename = "trait-performance-regression_panel-plot.pdf",
path = "Output/Figures",
height = 6, width = 10)
# load libraries
library(brms)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(tidybayes)
# 1. Bark Width (BW)
BW_var <- brm(BW_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/BW_var")
BW_var_df <- as.data.frame(BW_var)
BW_among_var <- apply(BW_var_df[,5:9], 1, var)
BW_within_var <- (BW_var_df$sigma)^2
BW_among_var_percent <- (BW_among_var/(BW_among_var + BW_within_var))*100
# 2. Wood Density (WD)
WD_var <- brm(WD_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/WD_var")
WD_var_df <- as.data.frame(WD_var)
WD_among_var <- apply(WD_var_df[,5:9], 1, var)
WD_within_var <- (WD_var_df$sigma)^2
WD_among_var_percent <- (WD_among_var/(WD_among_var + WD_within_var))*100
# 3. Leaf Area (Leaf_Area)
LA_var <- brm(Leaf_Area_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LA_var")
LA_var_df <- as.data.frame(LA_var)
LA_among_var <- apply(LA_var_df[,5:9], 1, var)
LA_within_var <- (LA_var_df$sigma)^2
LA_among_var_percent <- (LA_among_var/(LA_among_var + LA_within_var))*100
# 4. Leaf Mass per Area (LMA)
LMA_var <- brm(LMA_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LMA_var")
LMA_var_df <- as.data.frame(LMA_var)
LMA_among_var <- apply(LMA_var_df[,5:9], 1, var)
LMA_within_var <- (LMA_var_df$sigma)^2
LMA_among_var_percent <- (LMA_among_var/(LMA_among_var + LMA_within_var))*100
# 5. Lamina Density (LD)
LD_var <- brm(LD_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LD_var")
LD_var_df <- as.data.frame(LD_var)
LD_among_var <- apply(LD_var_df[,5:9], 1, var)
LD_within_var <- (LD_var_df$sigma)^2
LD_among_var_percent <- (LD_among_var/(LD_among_var + LD_within_var))*100
# 6. Leaf LWR (LWR)
LWR_var <- brm(LWR_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LWR_var")
LWR_var_df <- as.data.frame(LWR_var)
LWR_among_var <- apply(LWR_var_df[,5:9], 1, var)
LWR_within_var <- (LWR_var_df$sigma)^2
LWR_among_var_percent <- (LWR_among_var/(LWR_among_var + LWR_within_var))*100
# 7. Stomatal Length (StomL)
StomL_var <- brm(Stom_L_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/StomL_var")
StomL_var_df <- as.data.frame(StomL_var)
StomL_among_var <- apply(StomL_var_df[,5:9], 1, var)
StomL_within_var <- (StomL_var_df$sigma)^2
StomL_among_var_percent <- (StomL_among_var/(StomL_among_var + StomL_within_var))*100
# 8. Stomatal Density (StomD)
StomD_var <- brm(Stom_D_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/StomD_var")
StomD_var_df <- as.data.frame(StomD_var)
StomD_among_var <- apply(StomD_var_df[,5:9], 1, var)
StomD_within_var <- (StomD_var_df$sigma)^2
StomD_among_var_percent <- (StomD_among_var/(StomD_among_var + StomD_within_var))*100
# Make a dataframe for plotting
Str_Trait_Var <- cbind(BW_among_var_percent, WD_among_var_percent,
LA_among_var_percent, LMA_among_var_percent,
LD_among_var_percent, LWR_among_var_percent,
StomL_among_var_percent, StomD_among_var_percent)
Str_Trait_Var <- as.data.frame(Str_Trait_Var)
Str_Trait_Var_df <- pivot_longer(data = Str_Trait_Var,
cols = everything(),
names_to = "Structural_Trait",
values_to = "Among_Var")
Str_Trait_plot2 <- ggplot(data = Str_Trait_Var_df,
aes(y = Structural_Trait, x = Among_Var)) +
xlim(0,100) +
stat_pointinterval(.width = c(0.95, 0.8)) +
ggtitle("Structural Traits") + xlab("Among Species Variance (%)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank()) +
scale_y_discrete(labels=c("WD_among_var_percent" = "Wood Density",
"StomL_among_var_percent" = "Stomatal Length",
"StomD_among_var_percent" = "Stomatal Density",
"LWR_among_var_percent" = "LWR",
"LMA_among_var_percent" = "LMA",
"LD_among_var_percent" = "Lamina Density",
"LA_among_var_percent" = "Leaf Area",
"BW_among_var_percent" = "Bark Width"))
Str_Trait_plot2
# 1. Hydraulic Conductivity (Ks)
Ks_var <- brm(Ks_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Ks_var")
Ks_var_df <- as.data.frame(Ks_var)
Ks_among_var <- apply(Ks_var_df[,5:9], 1, var)
Ks_within_var <- (Ks_var_df$sigma)^2
Ks_among_var_percent <- (Ks_among_var/(Ks_among_var + Ks_within_var))*100
# 2. Leaf Specific Conductivity (LSC)
LSC_var <- brm(LSC_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSC_var")
LSC_var_df <- as.data.frame(LSC_var)
LSC_among_var <- apply(LSC_var_df[,5:9], 1, var)
LSC_within_var <- (LSC_var_df$sigma)^2
LSC_among_var_percent <- (LSC_among_var/(LSC_among_var + LSC_within_var))*100
# 3. Photosynthetic Rate (Photo)
Photo_var <- brm(Photo_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Photo_var")
Photo_var_df <- as.data.frame(Photo_var)
Photo_among_var <- apply(Photo_var_df[,5:9], 1, var)
Photo_within_var <- (Photo_var_df$sigma)^2
Photo_among_var_percent <- (Photo_among_var/(Photo_among_var + Photo_within_var))*100
# 4. Total Assimilation (Total_Assim)
LSP_var <- brm(Total_Assim_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/LSP_var")
LSP_var_df <- as.data.frame(LSP_var)
LSP_among_var <- apply(LSP_var_df[,5:9], 1, var)
LSP_within_var <- (LSP_var_df$sigma)^2
LSP_among_var_percent <- (LSP_among_var/(LSP_among_var + LSP_within_var))*100
# 5. Stomatal Conductance (Cond)
Cond_var <- brm(Cond_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/Cond_var")
Cond_var_df <- as.data.frame(Cond_var)
Cond_among_var <- apply(Cond_var_df[,5:9], 1, var)
Cond_within_var <- (Cond_var_df$sigma)^2
Cond_among_var_percent <- (Cond_among_var/(Cond_among_var + Cond_within_var))*100
# 6. Instantaneous Water Use Efficiency (WUE_Instan)
WUE_Instan_var <- brm(WUE_Instan_scaled ~ 1 + (1|Species),
data = Protea_data,
family = gaussian(link = "identity"),
prior = c(prior(normal(0, 1), class = Intercept),
prior(cauchy(0, 5), class = sd)),
control = list(adapt_delta = 0.99, max_treedepth = 12),
save_pars = save_pars(all = TRUE),
iter = 4000, warmup = 2000, chains = 4,
file = "Output/Model_Fits/WUE_Instan_var")
WUE_Instan_var_df <- as.data.frame(WUE_Instan_var)
WUE_Instan_among_var <- apply(WUE_Instan_var_df[,5:9], 1, var)
WUE_Instan_within_var <- (WUE_Instan_var_df$sigma)^2
WUE_Instan_among_var_percent <- (WUE_Instan_among_var/(WUE_Instan_among_var + WUE_Instan_within_var))*100
# Make a dataframe for plotting
Perf_Trait_Var <- cbind(Ks_among_var_percent, LSC_among_var_percent,
Photo_among_var_percent, LSP_among_var_percent,
Cond_among_var_percent, WUE_Instan_among_var_percent)
Perf_Trait_Var <- as.data.frame(Perf_Trait_Var)
Perf_Trait_Var_df <- pivot_longer(data = Perf_Trait_Var,
cols = everything(),
names_to = "Performance_Trait",
values_to = "Among_Var")
Perf_Trait_plot2 <- ggplot(data = Perf_Trait_Var_df,
aes(y = Performance_Trait, x = Among_Var)) +
xlim(0, 100) +
stat_pointinterval(.width = c(.95, .5)) +
ggtitle("Physiological Performance Traits") + xlab("Among Species Variance (%)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank()) +
scale_y_discrete(labels=c("WUE_Instan_among_var_percent" = "Instantaneous \n WUE",
"LSP_among_var_percent" = "Leaf-Specific \n Photosynthesis",
"Photo_among_var_percent" = "Photosynthetic \n Rate",
"LSC_among_var_percent" = "Leaf-Specific \n Conductivity",
"Ks_among_var_percent" = "Hydraulic \n Conductivity",
"Cond_among_var_percent" = "Stomatal \n Conductance"))
Perf_Trait_plot2
# Multi-panel plot
plot_grid(Str_Trait_plot2, Perf_Trait_plot2,
labels = c("A", "B"), ncol = 1, nrow = 2)
# save
ggsave(filename = "var-partitioning_panel-plot_2.pdf",
path = "Output/Figures",
height = 8, width = 6)
# load libraries
library(mvtnorm)
library(ggplot2)
library(cowplot)
library(RColorBrewer)
# load libraries
library(ggplot2)
library(cowplot)
# libraries
library(ggplot2)
library(tidyverse)
library(cowplot)
library(brms)
library(tidybayes)
library(bayesplot)
print(sessionInfo())
